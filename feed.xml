<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.0.3">Jekyll</generator><link href="https://k94n.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://k94n.com/" rel="alternate" type="text/html" /><updated>2016-03-11T08:56:42+01:00</updated><id>https://k94n.com/</id><title>Klemens Gordon</title><subtitle>Fullstack web developer with love for javascript, performance, coffee &amp; cigarettes. Yadda. Yadda. Laser.</subtitle><author><name>Klemens Gordon</name><email>gordon@k94n.com</email></author><entry><title>Webpack FTW!!!!</title><link href="https://k94n.com/webpack-ftw" rel="alternate" type="text/html" title="Webpack FTW!!!!" /><published>2016-03-14T00:00:00+01:00</published><updated>2016-03-14T00:00:00+01:00</updated><id>https://k94n.com/webpack-ftw</id><content type="html" xml:base="https://k94n.com/webpack-ftw">&lt;p&gt;This post covers the code examples from my talk „&lt;a href=&quot;https://speakerdeck.com/k9ordon/webpack-ftw&quot;&gt;Webpack FTW- shipping a frontend&lt;/a&gt;“. It should help you understand what webpack is capable of.&lt;/p&gt;

&lt;p&gt;Currently, we use &lt;strong&gt;Grunt.js&lt;/strong&gt; for all the build steps at a mid to large size project. Module dependencies are written in an amd header and a handcrafted concat array is used for bundling our front-end-code into logic chunks. As the project is getting bigger and more developers joining the codebase this is getting very tricky to maintain.&lt;/p&gt;

&lt;p&gt;First I evaluated &lt;strong&gt;browserify&lt;/strong&gt;. It does exactly what I was searching for: Bundle up all dependencies. But as our web application has a very high-performance requirement, we need to split our application in multiple small bundles. This leads to shared common code. I did some sandboxed examples with „factor-bundle“, but it just feels not right and broke in some of our tests.&lt;/p&gt;

&lt;p&gt;Next up was webpack. It instantly got me with its &lt;a href=&quot;https://webpack.github.io/&quot;&gt;start page&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpack-ftw/what-is-webpack.png&quot; alt=&quot;webpack start page: what is webpack?&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;„Every static asset should be able to be a module“ &lt;img class=&quot;emoji&quot; title=&quot;:ok_hand:&quot; alt=&quot;:ok_hand:&quot; src=&quot;/assets/build/emoji/unicode/1f44c.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Instead of just bundling up just your javascript it bundles everything. Perfect. Code Splitting built in. Chunks are loaded on demand. Amazing. ES6 Module. Consistent source maps through all steps. Yadda yadda yadda everything. Lets get to code:&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;emoji&quot; title=&quot;:guardsman:&quot; alt=&quot;:guardsman:&quot; src=&quot;/assets/build/emoji/unicode/1f482.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt; Cpt. obviously: you need &lt;a href=&quot;http://lmgtfy.com/?q=install+node.js&quot;&gt;node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install webpack global. If you want some dev tools magic install webpack-dev-server.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install webpack -g
npm install webpack-dev-server -g
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;a-simple-bundle&quot;&gt;A simple bundle&lt;/h2&gt;

&lt;p&gt;As this was a talk with fancy slides here are some in-ur-face-images to visualize what’s happening:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpack-ftw/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First we just do a simple webpack bundle with some dependencies. Check out the &lt;a href=&quot;https://github.com/k9ordon/webpack-ftw/tree/master/1-bundle&quot;&gt;example code&lt;/a&gt;.
Then we run webpack for bundling all out requirements from entry.js to bundle.js.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack entry.js bundle.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This almost the same what the browserify cli does.&lt;/p&gt;

&lt;h2 id=&quot;the-css-thing&quot;&gt;The CSS thing&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpack-ftw/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next we add CSS the build. We need a loader to process the CSS.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i CSS-loader style-loader -D
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can simply include a CSS file to the module &lt;code class=&quot;highlighter-rouge&quot;&gt;require(&#39;style!css!./entry.css&#39;)&lt;/code&gt; and its added to the dependency tree as well. This cryptic „style!CSS!“ brainfuck defines the appropriate loader. This can be handled via a webpack config - see next step.&lt;/p&gt;

&lt;p&gt;Look at dat &lt;a href=&quot;https://github.com/k9ordon/webpack-ftw/tree/master/2-cssthing&quot;&gt;Example Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this example, CSS is shipped with the bundled js files. Its also possible to ship „real“ CSS files. This is covered in step  4.&lt;/p&gt;

&lt;h2 id=&quot;loaders--config&quot;&gt;Loaders &amp;amp; Config&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpack-ftw/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Loaders are some kind of pre-processing. There is a &lt;a href=&quot;http://webpack.github.io/docs/list-of-loaders.html&quot;&gt;huge list of loaders&lt;/a&gt; available. In this example, we preprocess es6 with babel. So let’s install the babel-loader and babel.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i babel-loader babel-core babel-preset-es2015 -D
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To make config more readable we create a &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack.config.js&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./entry.es6.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bundle.js&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;loaders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;es6&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;node_modules|bower_components&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;babel&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;es2015&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;css$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;style!css?sourceMap&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Entry and Output property are same as the cli option. Additionally, we add a &lt;code class=&quot;highlighter-rouge&quot;&gt;loaders&lt;/code&gt; array. This contains all „special behaving“ requirements. The &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; property tells webpack what loader is applied to the matching files. Now you just have to &lt;code class=&quot;highlighter-rouge&quot;&gt;require(&#39;./entry.css&#39;)&lt;/code&gt; and it automatically loads through the CSS loader.&lt;/p&gt;

&lt;p&gt;Looki looks &lt;a href=&quot;https://github.com/k9ordon/webpack-ftw/tree/master/3-loaders&quot;&gt;Example Code&lt;/a&gt; and run this config:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack --config webpack.config.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;code-splitting&quot;&gt;Code Splitting&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/webpack-ftw/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this part webpack will split our code into 2 entry chunks and share code as commons.js.     &lt;a href=&quot;https://github.com/k9ordon/webpack-ftw/tree/master/4-codesplitting&quot;&gt;Example Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Furthermore, we will extract „real“ CSS files. Extracting text needs the extract-text-webpack-plugin so here we go:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install extract-text-webpack-plugin -D
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our new &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack.config.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExtractTextPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extract-text-webpack-plugin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// multiple named entries&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bundle1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./entry1.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bundle2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./entry2.js&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;…&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// extract css to css files&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExtractTextPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[name].css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// extract common code to commons.js&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CommonsChunkPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;commons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commons.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;More about dynamic loading of chunks, synchronously requires and other stuff at &lt;a href=&quot;https://webpack.github.io/docs/code-splitting.html&quot;&gt;webpack documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;dev-server--hot-module-replacement&quot;&gt;Dev Server &amp;amp; Hot Module Replacement&lt;/h2&gt;

&lt;p&gt;Webpack-dev-server is a node.js Express server, which uses the webpack-dev-middleware and Socket.IO to serve the webpack bundle. Hot Module Replacement (&lt;code class=&quot;highlighter-rouge&quot;&gt;—hot&lt;/code&gt; flag) only replaces a changed module instead of a full page reload. The dev server comes as an independent package and must be installed separately with &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install webpack-dev-server -g&lt;/code&gt;. There are &lt;a href=&quot;https://webpack.github.io/docs/webpack-dev-server.html#automatic-refresh&quot;&gt;2 ways&lt;/a&gt; to run the server: Iframe mode and Inline mode. In this example we use inline (&lt;code class=&quot;highlighter-rouge&quot;&gt;—inline&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Start a development server with hot module reload at &lt;a href=&quot;http://localhost:8080/webpack-dev-server/&quot;&gt;localhost:8080&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack-dev-server --config webpack.config.js --hot --inline -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Learn &lt;a href=&quot;https://webpack.github.io/docs/webpack-dev-server.html&quot;&gt;more about webpack-dev-server&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;production-build&quot;&gt;Production Build&lt;/h2&gt;

&lt;p&gt;For production, there are usually some optimizations to make sure stuff is efficient. Webpack comes with a bunch of optimizations as you can read in their &lt;a href=&quot;documentation&quot;&gt;https://webpack.github.io/docs/optimization.html&lt;/a&gt;. To simplify the process we use the production shortcut (&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt;-Flag). This will minimize     respectively uglify command for all your CSS and js. To get our node.js dependency to production we set the node env variable.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;NODE_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production webpack --config webpack.config.js -p
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Webpack adds 243B for runtime plus 20B per module or 4B per dependency.&lt;/strong&gt; &lt;img class=&quot;emoji&quot; title=&quot;:flushed:&quot; alt=&quot;:flushed:&quot; src=&quot;/assets/build/emoji/unicode/1f633.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt; Amazingly small. Here is a &lt;a href=&quot;https://webpack.github.io/docs/comparison.html&quot;&gt;comparison&lt;/a&gt; of other bundlers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/k9ordon/webpack-ftw&quot;&gt;Slides on speakerdeck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><summary>This post covers the code examples from my talk „Webpack FTW- shipping a frontend“. It should help you understand what webpack is capable of.</summary></entry><entry><title>Meteor.js - A lovestory</title><link href="https://k94n.com/meteor-a-lovestory" rel="alternate" type="text/html" title="Meteor.js - A lovestory" /><published>2016-03-10T00:00:00+01:00</published><updated>2016-03-10T00:00:00+01:00</updated><id>https://k94n.com/meteor-a-lovestory</id><content type="html" xml:base="https://k94n.com/meteor-a-lovestory">&lt;p&gt;Meteor.js is a &lt;strong&gt;full stack javascript framework&lt;/strong&gt; for building modern web applications on a unified javascript stack (MongoDB, Node.js, Browser). If you want to build applications fast, it’s definitely the way to go.
This article provides a rough overview of some selected concepts and techniques that I use for side projects.&lt;/p&gt;

&lt;p&gt;Some key benefits of Meteor.js are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Barely any dev-ops from the first line to production&lt;/li&gt;
  &lt;li&gt;Sophisticated template engine&lt;/li&gt;
  &lt;li&gt;Realtime per default&lt;/li&gt;
  &lt;li&gt;Painless Cordova mobile builds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meteor.js is very well &lt;a href=&quot;http://docs.meteor.com/#/full/&quot;&gt;documented&lt;/a&gt; and has a huge package-catalog called &lt;a href=&quot;https://atmospherejs.com/&quot;&gt;Atmosphere&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;First things first: You need &lt;a href=&quot;http://lmgtfy.com/?q=install+node.js&quot;&gt;Node.js&lt;/a&gt; - yolo.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://install.meteor.com/ | sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it for the cool kids (more for the &lt;a href=&quot;https://install.meteor.com/windows&quot;&gt;windows peeps&lt;/a&gt; - painless too - it’s a .exe lol). You now have &lt;code class=&quot;highlighter-rouge&quot;&gt;meteor&lt;/code&gt;. That’s all you need.&lt;/p&gt;

&lt;h2 id=&quot;project-bootstrapping&quot;&gt;Project bootstrapping&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor create leproject
meteor
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We create a project named „leproject“ (&lt;img class=&quot;emoji&quot; title=&quot;:guardsman:&quot; alt=&quot;:guardsman:&quot; src=&quot;/assets/build/emoji/unicode/1f482.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt; obviously ur own project name). After running the project with &lt;code class=&quot;highlighter-rouge&quot;&gt;meteor&lt;/code&gt; we are ready for code. The dev environment includes a running MongoDB host,  Node.js server and live reload with &lt;a href=&quot;http://info.meteor.com/blog/meteor-hot-code-push&quot;&gt;hotcodepush&lt;/a&gt;. Meteor.js also creates some sample files to get you up and running.&lt;/p&gt;

&lt;h2 id=&quot;app-structure&quot;&gt;App structure&lt;/h2&gt;

&lt;p&gt;Basically its simple: &lt;strong&gt;All files are concatenated&lt;/strong&gt; and shipped. &lt;img class=&quot;emoji&quot; title=&quot;:metal:&quot; alt=&quot;:metal:&quot; src=&quot;/assets/build/emoji/metal.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are some „special“ directories inside your project affecting load order, destination of script files, and some other characteristics.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;/client&lt;/strong&gt; javascript that should solely be shipped to the client. Will not affect Node.js. Files in this directory are executed before other client code. Equivalent to &lt;code class=&quot;highlighter-rouge&quot;&gt;if (Meteor.isClient) {}&lt;/code&gt; wrapped code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/server&lt;/strong&gt; as you can guess this is the opposite of client:  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (Meteor.isServer) {}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/public&lt;/strong&gt; served as-is to the client. Images, icons and other static unprocessed assets.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/private&lt;/strong&gt; Only accessible from server code. Can be loaded via &lt;a href=&quot;http://docs.meteor.com/#assets&quot;&gt;Assets api&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;/lib&lt;/strong&gt; common code like collections and utilities. Loaded first.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When Meteor.js concatenates javascript, there are some rules for controlling the order. From first to last:
&lt;em&gt;HTML templates &amp;gt; files beginning with main &amp;gt; files inside lib &amp;gt; deeper Path &amp;gt; alphabetical&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Read &lt;a href=&quot;http://docs.meteor.com/#/full/fileloadorder&quot;&gt;more about load order&lt;/a&gt; on meteor.com.&lt;/p&gt;

&lt;h2 id=&quot;views&quot;&gt;Views&lt;/h2&gt;

&lt;p&gt;Meteor.js’ in-house template engine is called &lt;strong&gt;blaze&lt;/strong&gt;. It’s declarative, simple and reactive. The matching template language is called spacebars, which is Meteor.js’ dialect of Handlebars.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;„Blaze fulfills the same purpose as Angular, Backbone, Ember, React, Polymer, or Knockout, but is much easier to use.“&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s also possible to switch the engine to &lt;a href=&quot;https://www.meteor.com/tutorials/react/creating-an-app&quot;&gt;react.js&lt;/a&gt; or &lt;a href=&quot;https://www.meteor.com/tutorials/angular/creating-an-app&quot;&gt;angular.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Example template from app boilerplate:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;yolo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to Meteor!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  {{&amp;gt; hello}}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Click Me&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;You ve pressed the button {{counter}} times.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ui-flow&quot;&gt;UI flow&lt;/h2&gt;

&lt;p&gt;Every template has its own data scope with &lt;strong&gt;helpers&lt;/strong&gt;. User interactions are handled via &lt;strong&gt;events&lt;/strong&gt;. That’s all.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;counter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;helpers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;counter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;click button&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;counter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;counter&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;preprocessing-less&quot;&gt;Preprocessing Less&lt;/h2&gt;

&lt;p&gt;A very common task is setting up your CSS preprocessor. Meteor.js’ amazing package system handles this extremely painless:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor add less
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add a less file and it’s processed before publishing. Source map support, a watcher for live reload and everything. Same for coffee script, sass whatsoever.&lt;/p&gt;

&lt;h2 id=&quot;deploying-img-classemoji-titleopenmouth-altopenmouth-srcassetsbuildemojiunicode1f62epng-height20-width20-alignabsmiddle-&quot;&gt;Deploying &lt;img class=&quot;emoji&quot; title=&quot;:open_mouth:&quot; alt=&quot;:open_mouth:&quot; src=&quot;/assets/build/emoji/unicode/1f62e.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/h2&gt;

&lt;p&gt;After 5 minutes of sophisticated hacking, it’s time to deploy our web application. From my experience, this is the part where the beer comes in. Searching for a poster, setting up Linux, installing a web server, configuring databases … &lt;img class=&quot;emoji&quot; title=&quot;:beer:&quot; alt=&quot;:beer:&quot; src=&quot;/assets/build/emoji/unicode/1f37a.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;
As I mentioned in the very first paragraph, Meteor.js is about rapid prototyping. So forget all the beers stuff about configuration and installing apt stuff. We do it the Meteor.js way:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor deploy leproject
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img class=&quot;emoji&quot; title=&quot;:guardsman:&quot; alt=&quot;:guardsman:&quot; src=&quot;/assets/build/emoji/unicode/1f482.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt; Cpt. obvious again: leproject is your project name.&lt;/p&gt;

&lt;p&gt;Your app is now live at leproject.meteor.com - Officially this is for prototyping only and is no production solution. It’s a fast way to get all the dev-ops stuff out of the way and just build the MVP.&lt;/p&gt;

&lt;h2 id=&quot;mobile-builds&quot;&gt;Mobile builds&lt;/h2&gt;

&lt;p&gt;As Meteor.js has Cordova built-in, this is also a very straight forward process. Add the platform and run it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor add-platform ios
meteor run ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will fire up the iOS simulator from Xcode and boots your app in a PhoneGap wrapper.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;meteor run ios-device&lt;/code&gt; starts the application on a connected iOS device. More about &lt;a href=&quot;https://www.meteor.com/tutorials/blaze/running-on-mobile&quot;&gt;running on mobile&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;collections--data&quot;&gt;Collections &amp;amp; Data&lt;/h2&gt;

&lt;p&gt;Meteor.js’ persistent data layer is MongoDB with some more magic.&lt;/p&gt;

&lt;p&gt;Data fetching is done with &lt;a href=&quot;https://www.meteor.com/ddp&quot;&gt;DDP&lt;/a&gt; (Distributed Data Protocol). Just remember its &lt;strong&gt;REST for Websockets&lt;/strong&gt;. Everything in Meteor.js is real-time by default, which is done by livequery a live database connector for Mongo (theoretically also MySQL #wtf). From a very high perspective: You execute a query, receive the result and all subsequent changes to this very query via web socket. &lt;img class=&quot;emoji&quot; title=&quot;:raised_hands:&quot; alt=&quot;:raised_hands:&quot; src=&quot;/assets/build/emoji/unicode/1f64c.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Meteor.js also feels fast because of a concept called &lt;strong&gt;Optimistic UI&lt;/strong&gt;. All the data that is transferred between MongoDB and clients gets cached in a minimongo. If a template gets rendered it instantly renders with data from minimongo and then updates with data from MongoDB.&lt;/p&gt;

&lt;p&gt;Enough theory - now some code. Somewhere in your global scope:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Yos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mongo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;yos&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add a new event to a template containing a form:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;submit form&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;Yos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;createdAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You just successfully added a record and pushed it in realtime to all clients observing a query like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;helpers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;yos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createdAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;mvc&quot;&gt;MVC&lt;/h2&gt;

&lt;p&gt;As Meteor.js doesn’t come with a built-in router there are some 3rd party routers. Meteor.js guide recommends &lt;a href=&quot;https://atmospherejs.com/kadira/flow-router&quot;&gt;flow-router&lt;/a&gt;. Another common router is &lt;a href=&quot;https://github.com/iron-meteor/iron-router&quot;&gt;Iron Router&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install iron router via Atmosphere - again easy as firing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor add iron:router
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sample route:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;Index&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iAmFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;we-need-user-accounts&quot;&gt;„We need user accounts“&lt;/h2&gt;

&lt;p&gt;Implementing authentication using ember.js or similar client frameworks can be really time-consuming: Implementation for the client, a backend service that does the user logic, session handling, emailing … yadda yadda yadda. As Metero.js is a full stack framework &lt;strong&gt;Meteor.js packages are also full stack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So let’s point you to the fast lane:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor add accounts-ui accounts-password
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Bruh. Done.&lt;/p&gt;

&lt;p&gt;In your template include the &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;loginButtons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt; partial to register/login. And you have &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{#if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;currentUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt; available to do stuff for logged in users.&lt;/p&gt;

&lt;p&gt;Same with OAuth: &lt;code class=&quot;highlighter-rouge&quot;&gt;meteor add accounts-facebook&lt;/code&gt; let’s you do a fully fledged Facebook OAuth. Woooot? &lt;img class=&quot;emoji&quot; title=&quot;:scream:&quot; alt=&quot;:scream:&quot; src=&quot;/assets/build/emoji/unicode/1f631.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;seo&quot;&gt;Seo&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;meteor add spiderable
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Uses the AJAX Crawling specification published by Google to serve HTML to compatible spiders (Google, Bing, Yandex, and more).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Uses phantom.js to serve a „spiderable“ static version of your javascript application behind the &lt;code class=&quot;highlighter-rouge&quot;&gt;?_escaped_fragment_=&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;final-words&quot;&gt;Final words&lt;/h2&gt;

&lt;p&gt;I &lt;img class=&quot;emoji&quot; title=&quot;:green_heart:&quot; alt=&quot;:green_heart:&quot; src=&quot;/assets/build/emoji/unicode/1f49a.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt; Meteor.js for getting non-funky stuff out of the way. You can build fast and modern stuff very efficiently and focus on the more refined stuff in later iterations.&lt;/p&gt;</content><summary>Meteor.js is a full stack javascript framework for building modern web applications on a unified javascript stack (MongoDB, Node.js, Browser). If you want to build applications fast, it’s definitely the way to go.
This article provides a rough overview of some selected concepts and techniques that I use for side projects.</summary></entry></feed>
